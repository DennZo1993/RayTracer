language: cpp

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - gcc-4.9
            - g++-4.9
            - cmake
            - cmake-data
      env: C_COMPILER=gcc-4.9 CXX_COMPILER=g++-4.9 GTEST_COLOR=1 BUILD_TYPE=Release

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - gcc-5
            - g++-5
            - cmake
            - cmake-data
      env: C_COMPILER=gcc-5 CXX_COMPILER=g++-5 GTEST_COLOR=1 LCOV="lcov-1.12/bin/lcov" BUILD_TYPE=Coverage

    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
            - george-edison55-precise-backports
          packages:
            - clang-3.8
            - cmake
            - cmake-data
      env: C_COMPILER=clang-3.8 CXX_COMPILER=clang++-3.8 GTEST_COLOR=1 BUILD_TYPE=Release

install:
  - |
    if [[ "$CXX_COMPILER" == "g++-5" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      wget "http://downloads.sourceforge.net/ltp/lcov-1.12.tar.gz"
      tar -zxvf lcov-1.12.tar.gz
      make -C lcov-1.12/ install PREFIX=lcov-1.12

      $LCOV --version
      gem install coveralls-lcov
    fi

script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
  - make CC=$C_COMPILER CXX=$CXX_COMPILER
  - ctest --verbose

after_success:
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      $LCOV --gcov-tool gcov-5 --directory . --capture --output-file coverage.info
      $LCOV --gcov-tool gcov-5 --remove coverage.info 'test/*' '/usr/*' '/gtest/*' --output-file coverage.info
      $LCOV --gcov-tool gcov-5 --list coverage.info
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
    fi

